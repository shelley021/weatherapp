name: WeatherApp CI
true:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
permissions:
  contents: write
jobs:
  build:
    runs-on: Ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: '17'
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install missing libtinfo package
      run: "Ubuntu_version=$(lsb_release -rs)\nif [[ \"$Ubuntu_version\" == \"22.04\"\
        \ || \"$Ubuntu_version\" == \"24.04\" ]]; then\n  sudo apt-get update -y\n\
        \  sudo apt-get install -y libtinfo6\nelse\n  sudo apt-get update -y\n  sudo\
        \ apt-get install -y libtinfo5\nfi\n"
    - name: Install system dependencies
      run: 'sudo apt-get update -y

        sudo apt-get install -y git zip unzip python3-pip autoconf libtool pkg-config

        sudo apt-get install -y zlib1g-dev libncurses5-dev libncursesw5-dev

        sudo apt-get install -y cmake libffi-dev libssl-dev

        sudo apt-get install -y libltdl-dev build-essential python3-dev python3-venv

        sudo apt-get install -y libnss3-dev libnss3-tools

        '
    - name: Configure pip mirror
      run: 'pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/

        pip config set global.trusted-host mirrors.aliyun.com

        '
    - name: Install Python dependencies
      run: 'python -m pip install --upgrade pip setuptools

        pip install buildozer==1.5.0 kivy==2.3.1 requests==2.25.1 cython==0.29.36
        certifi

        pip install python-for-android

        '
    - name: Set up Android SDK
      uses: android-actions/setup-android@v3
      with:
        accept-android-sdk-licenses: true
        cmdline-tools-version: latest
        packages: build-tools;34.0.0 platform-tools platforms;android-34 ndk;25.2.9519653
    - name: Clean buildozer cache
      run: 'rm -rf ~/.buildozer/cache || true

        buildozer android clean

        '
    - name: Initialize Buildozer
      run: 'buildozer init

        cat << ''EOF'' > buildozer.spec

        [app]

        title = WeatherApp

        package.name = weatherapp

        package.domain = org.weatherapp

        source.dir = .

        source.include_exts = py,png,jpg,kv,atlas

        version = 0.1

        requirements = python3,kivy==2.3.1,requests==2.25.1,certifi

        android.permissions = INTERNET

        android.api = 34

        android.minapi = 21

        android.ndk = 25.2.9519653

        android.ndk_path = $ANDROID_NDK_HOME

        android.sdk_path = $ANDROID_HOME

        android.accept_sdk_license = True

        orientation = portrait

        fullscreen = 0

        log_level = 2

        p4a.branch = master

        EOF

        '
    - name: Prepare python-for-android
      run: 'mkdir -p .buildozer/android/platform

        git clone https://github.com/kivy/python-for-android.git .buildozer/android/platform/python-for-android

        cd .buildozer/android/platform/python-for-android

        git checkout master

        '
    - name: Build APK with retry
      env:
        OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}
        P4A_RELEASE_KEYALIAS: ${{ secrets.P4A_RELEASE_KEYALIAS }}
        P4A_RELEASE_KEYALIAS_PASSWD: ${{ secrets.P4A_RELEASE_KEYALIAS_PASSWD }}
        P4A_RELEASE_KEYSTORE: ${{ secrets.P4A_RELEASE_KEYSTORE }}
        P4A_RELEASE_KEYSTORE_PASSWD: ${{ secrets.P4A_RELEASE_KEYSTORE_PASSWD }}
      run: "export CFLAGS=\"-Wno-error=implicit-function-declaration -Wno-error=array-bounds\
        \ -Wno-error=deprecated-declarations\"\nexport CPPFLAGS=\"-D_GNU_SOURCE -D_DEFAULT_SOURCE\
        \ -D_XOPEN_SOURCE=700\"\nexport LDFLAGS=\"-lnsl -lresolv -lgssapi_krb5\"\n\
        \n# Retry build up to 3 times if failed\nfor i in {1..3}; do\n  echo \"Attempt\
        \ $i to build APK...\"\n  buildozer -v android debug deploy 2>&1 | tee build.log\n\
        \  if [ ${PIPESTATUS[0]} -eq 0 ]; then\n    echo \"Build succeeded on attempt\
        \ $i\"\n    break\n  else\n    echo \"Build failed on attempt $i, cleaning\
        \ and retrying...\"\n    cat build.log\n    buildozer android clean\n    sleep\
        \ 10\n  fi\ndone\n\n# Final check if build failed after all retries\nif [\
        \ ! -f bin/weatherapp-*.apk ]; then\n  echo \"Build failed after 3 attempts\"\
        \n  exit 1\nfi\n"
    - name: Verify Build Log
      if: always()
      run: "if [ -f build.log ]; then\n  echo \"Build log exists, checking for errors...\"\
        \n  if grep -q -E \"ERROR:|FAILED\" build.log; then\n    echo \"Errors found\
        \ in build log:\"\n    grep -E \"ERROR:|FAILED\" build.log\n    exit 1\n \
        \ else\n    echo \"No critical errors found in build log\"\n  fi\nelse\n \
        \ echo \"No build log found\"\n  exit 1\nfi\n"
    - name: Save Build Log
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-log-None
        path: build.log
        retention-days: 1
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: '17'
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Set up Android SDK
      uses: android-actions/setup-android@v3
      with:
        accept-android-sdk-licenses: true
        cmdline-tools-version: latest
        packages: build-tools;34.0.0 platform-tools platforms;android-34 ndk;25.2.9519653
    - name: Build APK
      env:
        OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}
        P4A_RELEASE_KEYALIAS: ${{ secrets.P4A_RELEASE_KEYALIAS }}
        P4A_RELEASE_KEYALIAS_PASSWD: ${{ secrets.P4A_RELEASE_KEYALIAS_PASSWD }}
        P4A_RELEASE_KEYSTORE: ${{ secrets.P4A_RELEASE_KEYSTORE }}
        P4A_RELEASE_KEYSTORE_PASSWD: ${{ secrets.P4A_RELEASE_KEYSTORE_PASSWD }}
      run: "export CFLAGS=\"-Wno-error=implicit-function-declaration -Wno-error=array-bounds\
        \ -Wno-error=deprecated-declarations\"\nexport CPPFLAGS=\"-D_GNU_SOURCE -D_DEFAULT_SOURCE\
        \ -D_XOPEN_SOURCE=700\"\nexport LDFLAGS=\"-lnsl -lresolv -lgssapi_krb5\"\n\
        buildozer android clean\nbuildozer -v android debug deploy 2>&1 | tee build.log\n\
        if [ ${PIPESTATUS[0]} -ne 0 ]; then\n  cat build.log\n  exit 1\nfi"
    - name: Save Build Log
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-log-None
        path: build.log
        retention-days: 1
    - name: Upload APK
      if: success()
      uses: actions/upload-artifact@v4
      with:
        if-no-files-found: error
        name: weatherapp-apk-None
        path: bin/weatherapp-*.apk
        retention-days: 1
'on':
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

# AutoDebug: Forced change at 2025-05-09T05:42:15.381997+00:00

# AutoDebug: Forced change at 2025-05-09T05:42:38.093251+00:00
